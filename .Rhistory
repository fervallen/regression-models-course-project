plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 1; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 1; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), 1.5 + runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 0; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 1; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
abline(lm(y ~ x), lwd = 2)
abline(h = mean(y[1 : (n/2)]), lwd = 3)
abline(h = mean(y[(n/2 + 1) : n]), lwd = 3)
fit <- lm(y ~ x + t)
abline(coef(fit)[1], coef(fit)[2], lwd = 3)
abline(coef(fit)[1] + coef(fit)[3], coef(fit)[2], lwd = 3)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
data(swiss); par(mfrow = c(2, 2))
fit <- lm(Fertility ~ . , data = swiss); plot(fit)
library(swirl)
swirl()
fit <- lm(y ~ x, out2)
plot(fit, which = 1)
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno, which = 1)
coef(fit) - coef(fitno)
view(dbeta(fit))
View(dbeta(fit))
head(dbeta(fit))
View(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
out2[1, "y"]
out2[1,]
predict(fitno, out2[1,])
1-resid(fit)[1]/resno
resid(fit)
resid(fit)[1]
head(hatvalues(fit))
?length
sigma <- sqrt(sum(resid(fit) ^ 2) / length(resid(fit)))
sigma <- sqrt(deviance(fit) / df.residual(fit))
rstd <- resid(fit) / (sigma * sqrt(1 - hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1 <- sqrt(deviance(fitno) / df.residual(fitno))
resid(fit)[1] / (sigma1 * sqrt(1 - hatvalues(fit)[i]))
resid(fit)[1] / (sigma1 * sqrt(1 - hatvalues(fit)[1]))
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
sum(dy ^ 2) / 2 * sigma ^ 2
sum(dy ^ 2) / (2 * sigma ^ 2)
plot(fit, which=5)
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
n <- 100
plot(c(1, n), 0 : 1, type = "n", frame = FALSE, xlab = "p", ylab = "R^2")
r <- sapply(1 : n, function(p)
{
y <- rnorm(n); x <- matrix(rnorm(n * p), n, p)
summary(lm(y ~ x))$r.squared
}
)
lines(1 : n, r, lwd = 2)
abline(h = 1)
n <- 100; nosim <- 1000
x1 <- rnorm(n); x2 <- rnorm(n); x3 <- rnorm(n);
betas <- sapply(1 : nosim, function(i){
y <- x1 + rnorm(n, sd = .3)
c(coef(lm(y ~ x1))[2],
coef(lm(y ~ x1 + x2))[2],
coef(lm(y ~ x1 + x2 + x3))[2])
})
round(apply(betas, 1, sd), 5)
n <- 100; nosim <- 1000
x1 <- rnorm(n); x2 <- x1/sqrt(2) + rnorm(n) /sqrt(2)
x3 <- x1 * 0.95 + rnorm(n) * sqrt(1 - 0.95^2);
betas <- sapply(1 : nosim, function(i){
y <- x1 + rnorm(n, sd = .3)
c(coef(lm(y ~ x1))[2],
coef(lm(y ~ x1 + x2))[2],
coef(lm(y ~ x1 + x2 + x3))[2])
})
round(apply(betas, 1, sd), 5)
data(mtcars)
fit <- lm(mpg ~ cylinders + weight, data = mtcars)
dim(mtcars)
head(mtcars)
fit <- lm(mpg ~ cyl + wt, data = mtcars)
fit
plot(fit)
fit <- lm(mpg ~ wt, data = mtcars[cyl = 4, ])
mtcars[cyl == 4, ]
mtcars[mtcars$cyl == 4, ]
fit <- lm(mpg ~ wt, data = mtcars[mtcars$cyl == 4, ])
fit2 <- lm(mpg ~ wt, data = mtcars[mtcars$cyl == 8, ])
fit
fit2
fit2$coefficients
fit2$coefficients$wt
fit2$coefficients[2]
fit2$coefficients[2]$wt
fit2$coefficients[2]
fit2$coefficients[2] - fit$coefficients[2]
fit$coefficients[2] - fit2$coefficients[2]
mtcars$cyl <- factor(mtcars$cyl)
fit <- lm(mpg ~ cyl + wt, mtcars)
fit
mtcars$cyl <- factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am)
levels(mtcars$am) <- c('-auto', '-manual')
fit <- lm(mpg ~ cyl + wt, mtcars)
summary(fit)$coef[3, 1]
fit
mtcars$cyl <- factor(mtcars$cyl)
fit <- lm(mpg ~ cyl + wt, mtcars)
fit
lm(mpg ~ cyl + wt, mtcars)
lm(mpg ~ cyl, mtcars)
lm(mpg ~ cyl + 0, mtcars)
lm(mpg ~ cyl + 1, mtcars)
summary(fit)$coef
summary(lm(mpg ~ cyl + 1, mtcars))$coef
fit <- lm(mpg ~ cyl + wt, mtcars)
fit <- lm(cyl ~ wt, mtcars)
fit <- lm(mpg ~ cyl + wt, mtcars)
fit2 <- lm(mpg ~ cyl:wt + wt, mtcars)
fit2
fit
summary(fit)
summary(fit2)
fit2 <- lm(mpg ~ cyl + wt + cyl:wt, mtcars)
summary(fit2)
lrtest(fit, fit)
lrtest(fit, fit2)
lrtest
install.packages('lmtest')
lrtest(fit, fit2)
library(lmtest)
lrtest(fit, fit2)
?I
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit <- lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit
summary(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(x ~ y)
plot.lm
plot(x, y)
abline(fit)
plot(fit)
hatvalues(fit)
hat(fit)
hat(x)
dfbetas
dfbetas(fit)
dfbetas(fit[5, ])
dfbetas(fit[4, ])
dfbetas(fit[, 4])
dfbetas(fit[, 5])
dfbeta(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(x ~ y)
dfbeta(fit)
dfbetas(fit[, 5])
dfbetas(fit)
?dfbeta
fit
plot(dfbetas(fit))
fit <- lm(y ~ x)
dfbetas(fit)
z <- rnorm(5)
fit <- lm(y ~ x)
fitz <- lm(y ~ x + z)
fitz
fit
install.packages("devtools")
devtools::install_github("jhudsl/collegeIncome")
library(collegeIncome)
data(college)
devtools::install_github("jhudsl/matahari")
library(matahari)
dance_start(value = FALSE, contents = FALSE)
head(college)
colnames(college)
dim(college)
unique(college$major_category)
lm(data = college, major_category ~ median)
lm(data = college, median ~ major_category)
lm(data = college, median ~ major_code + major_category)
plot(median ~ major_code)
plot(college$median ~ college$major_code)
options(scipen=999)
plot(college$median ~ college$major_code)
plot(college$median ~ college$major_category)
library(ggplot2)
ggplot(college, aes(x = rank, y = median, fill = major_category)) + geom_point()
ggplot(college, aes(x = rank, y = median)) + geom_point(colour = major_category)
ggplot(college, aes(x = rank, y = median, fill = major_category, color = major_category)) + geom_point()
ggplot(college, aes(x = major_category, y = sum(median), fill = major_category, color = major_category)) + geom_point()
ggplot(college, aes(x = major_category, y = median, fill = major_category, color = major_category)) + geom_boxplot()
ggplot(college, aes(x = major_category, y = p75th, fill = major_category, color = major_category)) + geom_boxplot()
ggplot(college, aes(x = major_category, y = p25th, fill = major_category, color = major_category)) + geom_boxplot()
college <- filter(college, major_category != Interdisciplinary)
college <- filter(college, college$major_category != 'Interdisciplinary')
head(college)
data(college)
college <- college[-(college$major_code == 'Interdisciplinary'),]
View(college)
head(college)
data(college)
college$major_code == 'Interdisciplinary'
college$major_code
college$major_category == 'Interdisciplinary'
college$major_category != 'Interdisciplinary'
college <- college[(college$major_category != 'Interdisciplinary'),]
head(college)
dim(college)
ggplot(college, aes(x = major_category, y = p25th, fill = major_category, color = major_category)) + geom_boxplot()
lm(data = college, p25th ~ major_category)
lm(data = college, p75th ~ major_category)
lm(data = college, p75th * perc_employed ~ major_category)
lm(data = college, p25th * perc_employed ~ major_category)
lm(data = college, median * perc_employed ~ major_category)
lm(data = college, median ~ major_category + perc_employed)
?anova
fit1 <- lm(data = college, median ~ major_category)
fit2 <- lm(data = college, median ~ major_category + perc_employed)
fit3 <- lm(data = college, median ~ major_category + perc_employed + perc_employed_fulltime)
anova(fit1, fit2)
plot(median ~ major_category)
plot(median ~ major_category, data = college)
sum(is.na(college$major_category))
sum(is.na(college$median))
plot(college$median ~ college$major_category)
college$median
college$major_category
plot(fit1)
redis(fit1)
resid(fit1)
lm(data = college, median ~ major_category + perc_employed)
lm(data = college, median ~ major_category)
lm(data = college, median ~ major_category + perc_men)
lm(data = college, median ~ major_category + perc_employed_fulltime)
sum(is.na(college$perc_employed_fulltime))
college$perc_employed_fulltime
rowSums(college)
college(is.finite(rowSums(college)))
college[is.finite(rowSums(college)), ]
college[is.finite(college$perc_employed_fulltime), ]
college[is.finite(college$perc_employed_fulltime) && !is.nan(college$perc_college_jobs), ]
college[is.finite(college$perc_employed_fulltime) & !is.nan(college$perc_college_jobs), ]
college <- college[is.finite(college$perc_employed_fulltime) & !is.nan(college$perc_college_jobs), ]
lm(data = college, median ~ major_category + perc_employed_fulltime)
lm(data = college, median ~ perc_employed_fulltime)
lm(data = college, median ~ major_category + perc_employed + perc_employed_fulltime)
fit1 <- lm(data = college, median ~ major_category)
fit2 <- lm(data = college, median ~ major_category + perc_employed)
fit3 <- lm(data = college, median ~ major_category + perc_employed + perc_employed_fulltime)
anova(fit1, fit2, fit3)
lm(data = college, p25th ~ perc_low_wage_jobs)
lm(data = college, p25th ~ major_category + perc_low_wage_jobs)
lm(data = college, p25th ~ major_category)
lm(data = college, p75th ~ major_category)
lm(data = college, p75th ~ major_category + perc_college_jobs)
lm(data = college, median + sample_size)
lm(data = college, median ~ sample_size)
lm(data = college, perc_employed ~ major_category)
lm(data = college, perc_employed_full_time ~ major_category)
lm(data = college, perc_employed_fulltime ~ major_category)
lm(data = college, median ~ major_category + perc_employed_fulltime)
lm(data = college, 75th ~ major_category + perc_employed_fulltime)
lm(data = college, p75th ~ major_category + perc_employed_fulltime)
fit1 <- lm(data = college, p75th ~ major_category)
fit1 <- lm(data = college, median ~ major_category)
fit2 <- lm(data = college, median ~ major_category + total)
fit3 <- lm(data = college, median ~ major_category + total + sample_size)
anova(fit1, fit2, fit3)
fit2 <- lm(data = college, median ~ major_category + perc_employed)
fit3 <- lm(data = college, median ~ major_category + perc_employed + perc_college_jobs)
anova(fit1, fit2, fit3)
fit2 <- lm(data = college, median ~ major_category + perc_college_jobs)
anova(fit1, fit2)
fit2 <- lm(data = college, median ~ major_category + perc_college_jobs + perc_low_wage_jobs)
fit2 <- lm(data = college, median ~ major_category + perc_college_jobs)
fit3 <- lm(data = college, median ~ major_category + perc_college_jobs + perc_low_wage_jobs)
anova(fit1, fit2)
anova(fit1, fit2, fit3)
fit3 <- lm(data = college, median ~ major_category + perc_low_wage_jobs)
fit2 <- lm(data = college, median ~ major_category + perc_low_wage_jobs)
anova(fit1, fit2)
fit2 <- lm(data = college, median ~ major_category + perc_employed_fulltime_yearround)
anova(fit1, fit2)
fit3 <- lm(data = college, median ~ major_category + perc_employed_fulltime_yearround + perc_college_jobs)
anova(fit1, fit2, fit3)
fit2 <- lm(data = college, median ~ major_category + perc_college_jobs)
fit3 <- lm(data = college, median ~ major_category + perc_college_jobs + perc_employed_fulltime_yearround)
anova(fit1, fit2, fit3)
fit2 <- lm(data = college, median ~ major_category + perc_men)
anova(fit1, fit2)
fit2 <- lm(data = college, median ~ major_category + perc_employed_fulltime)
fit3 <- lm(data = college, median ~ major_category + perc_employed_fulltime + perc_employed_fulltime_yearround)
anova(fit1, fit2, fit3)
lm(data = college, perc_employed_fulltime_yearround ~ major_category)
lm(data = college, perc_employed_fulltime_yearround ~ median)
lm(data = college, median ~ perc_employed_fulltime_yearround)
dance_save("~/Desktop/college_major_analysis.rds")
dance_save("C:\Users\mtk\Documents\R\major-income")
dance_save("C:/Users/mtk/Documents/R/major-income/college_major_analysis.rds")
lm(data = college, median ~ perc_employed * perc_employed_fulltime_yearround)
lm(data = college, median ~ major_category + perc_employed * perc_employed_fulltime_yearround)
fit2 <- lm(data = college, median ~ major_category + perc_employed * perc_employed_fulltime_yearround)
anova(fit1, fit2)
fit2 <- lm(data = college, median ~ perc_employed * perc_employed_fulltime_yearround)
fit1 <- lm(data = college, median ~ perc_employed * perc_employed_fulltime_yearround)
fit1 <- lm(data = college, median ~ perc_employed * perc_employed_fulltime_yearround + major_category)
fit1 <- lm(data = college, median ~ perc_employed * perc_employed_fulltime_yearround)
fit2 <- lm(data = college, median ~ perc_employed * perc_employed_fulltime_yearround + major_category)
anova(fit1, fit2)
fit2 <- lm(data = college, median ~ perc_employed_fulltime_yearround + major_category)
fit1 <- lm(data = college, median ~ perc_employed_fulltime_yearround)
anova(fit1, fit2)
fit2 <- lm(data = college, median ~ perc_employed_fulltime_yearround + major_category)
lm(data = college, median ~ perc_employed_fulltime_yearround)
lm(data = college, median ~ perc_employed_fulltime_yearround + major_category)
lm(data = college, perc_employed_fulltime_yearround ~ major_category)
lm(data = college, perc_employed_fulltime_yearround ~ major_category + median())
lm(data = college, perc_employed_fulltime_yearround ~ major_category + median
)
lm(data = college, median ~ major_category)
library(swirl)
swirl()
rpg1()
rgp1()
rgp2()
View(swiss)
mdl <- lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality, data = swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, data = swiss)
vif(mdl2)
library(swirl)
swirl()
x1c <- simbias()
apply(x1c, 1, mean)
data(swiss)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3) / 43
n <- (deviance(fit1) - deviance(fit3)) / 2
n/d
pf(n/d, 2, 43, lower.tail = FALSE)
sharpio.test(fit3$residuals)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
library(swirl)
swirl()
View(ravenData)
md1 <- glm(ravenWinNum ~ ravenScore, family = 'binominal', ravenData)
md1 <- glm(ravenWinNum ~ ravenScore, family = 'binomial', ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, family = 'binomial', ravenData)
lodds <- predict(mdl, data.frame(ravenScore = c(0, 3, 6)))
exp(lodds) / (1 + exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
swirl()
library(swirl)
swirl()
var(rpois(1000, 50))
nxt()
View(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
confint(mdl, 'date')
exp(confint(mdl, 'date'))
library(swirl)
swirl()
which.max(hits[,'visits'])
hits[704,]
lambda <- mdl$fitted.values[704
]
qpois(.95, lambda)
mdl2 <- glm(hits, offset=log(visits+1))
mdl2 <- glm(data = hits, offset = log(visits+1))
q
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits, offset = log(visits+1))
qpois(.95, mdl2$fitted.values[704])
?shuttle
library(MASS)
?shuttle
head(shuttle)
glm(shuttle$use ~ shuttle$wind, family = binomial)
shuttleLog <- glm(shuttle$use ~ shuttle$wind, family = binomial)
exp(shuttleLog$coeff)
exp(confint(shuttleLog))
anova(shuttleLog,test="Chisq")
shuttleLog <- glm(shuttle$use ~ shuttle$wind + shuttle$magn, family = binomial)
exp(shuttleLog$coeff)
glm(shuttle$use ~ shuttle$wind, family = binomial)
exp(shuttleLog$coeff)
glm(shuttle$use ~ 1 - shuttle$wind, family = binomial)
exp(shuttleLog$coeff)
shuttleLog <- glm(shuttle$use ~ shuttle$wind, family = binomial)
exp(shuttleLog$coeff)
shuttleLog <- glm(shuttle$use ~ 1 - shuttle$wind, family = binomial)
exp(shuttleLog$coeff)
shuttleLog <- glm(1 - shuttle$use ~ shuttle$wind, family = binomial)
shuttleLog <- glm((1 - shuttle$use) ~ shuttle$wind, family = binomial)
shuttle2$use2<-as.numeric(shuttle2$use=='auto')
shuttle$use2<-as.numeric(shuttle2$use=='auto')
shuttle$use2<-as.numeric(shuttle$use=='auto')
shuttleLog <- glm((1 - shuttle$use2) ~ shuttle$wind, family = binomial)
exp(shuttleLog$coeff)
shuttleLog <- glm(shuttle$use2 ~ shuttle$wind, family = binomial)
exp(shuttleLog$coeff)
shuttleLog <- glm(use2 ~ wind, family = binomial, shuttle)
exp(shuttleLog$coeff)
exp(shuttleLog)$coef
shuttleLog$coeff
shuttleLog <- glm((1 - shuttle$use2) ~ shuttle$wind, family = binomial)
shuttleLog$coeff
data = InsectSprays
glm(InsectSprays$spray ~ InsectSprays$count, family="poisson")
glm(InsectSprays$count ~ InsectSprays$spray, family="poisson")
glm(InsectSprays$count ~ InsectSprays$spray - 1, family="poisson")
2.674 / 2.730
exp(2.674) / exp(2.730)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x, y, frame=FALSE, pch=21, bg="lightblue", cex=2)
setwd("C:\Users\mtk\Documents\R\regression-models-course-project")
setwd("C:/Users/mtk/Documents/R/regression-models-course-project")
knitr::opts_chunk$set(echo = TRUE)
summary(mtcars)
head(mtcars)
?mtcars
length(mtcars)
dim(mtcars)
gml(mpg ~ am, data = mtcars, family = 'binominal')
glm(mpg ~ am, data = mtcars, family = 'binominal')
glm(mpg ~ am, data = mtcars, family = binominal)
glm(mpg ~ am, data = mtcars, family = 'binomial')
glm(am ~ mpg, data = mtcars, family = 'binomial')
mpgToAm <- glm(am ~ mpg, data = mtcars, family = 'binomial')
plo(mpgToAm)
plot(mpgToAm)
plot(mpgToAm)
summary(mpgToAm)
plot(mtcars$am, mpgToAm$fitted, pch=19, col='blue', xlab='MPG', ylab='AM')
mpgToAm <- glm(am ~ mpg, data = mtcars, family = 'binomial')
summary(mpgToAm)
exp(mpgToAm$coeff)
exp(confint(mpgToAm))
anova(mpgToAm, test="Chisq")
